@model PaginatedList<SourceCode.Models.CourseTbl>;

@{
    ViewData["Title"] = "Courses";
}

<div class="grid-SEES col-md-9">
    @if(User.IsInRole("Admin")){
        <div>
            @Html.ActionLink("New Course +", "CreateCourse", "Course", null, new {@class = "btn btn-primary"})
        </div>
    }
    
    <form asp-action="Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name <input type="text" name="SearchString" class="search-box" value="@ViewData["CurrentFilter"]" /> &emsp;
                <input type="submit" value="Search" class="btn btn-primary" /> &emsp;
                <a asp-action="Index" class="btn btn-primary">Full List</a>
            </p>
        </div>
    </form>
    <div>
        <table class="table-SEES">
            <tr>
                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["IDSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">ID</a></th>

                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">Name</a></th>

                <th>Teacher</th>

                <th><a asp-action="Index" asp-route-sortOrder="@ViewData["LvlSortParm"]" 
                asp-route-currentFilter="@ViewData["CurrentFilter"]">Level</a></th>

                <th></th>
            </tr>
        @foreach (var course in Model)
        {
            <tr>
                <td>@course.Id</td>
                <td>@course.Name</td>
                <td>@course.Teacher</td>
                <td>@course.EdLevel</td>
                @if(User.IsInRole("Lecturer")){
                    <td>
                        @Html.ActionLink("Go to Course", "CourseDetails", "Course",
                    new { id = course.Id},
                    new {@class = "btn btn-primary"}
                    ) &emsp;
                        @Html.ActionLink("Take Attendance", "CreateAttendance", "Attendance",
                    new { EdLevel = course.EdLevel, courseID = course.Id },
                    new {@class = "btn btn-primary"}
                    ) &emsp;
                        @Html.ActionLink("Go to Attendance", "Index", "Attendance",
                    new { id = course.Id },
                    new {@class = "btn btn-primary"}
                    )
                    </td>
                }else{
                    <td>@Html.ActionLink("Course Details", "CourseDetails", new { id = course.Id}, new { @class = "btn btn-primary"})</td>
                }
                
            </tr>
        }
        </table>
    </div>
    @{
        //paging variables for arrows
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }

    <div class="paging-btn-SEES">
        <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex - 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-primary @prevDisabled">Previous
        </a> &emsp;

        <a asp-action="Index"
            asp-route-sortOrder="@ViewData["CurrentSort"]"
            asp-route-pageNumber="@(Model.PageIndex + 1)"
            asp-route-currentFilter="@ViewData["CurrentFilter"]"
            class="btn btn-primary @nextDisabled">Next
        </a>
    </div>
    
</div>